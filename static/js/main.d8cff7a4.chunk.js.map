{"version":3,"sources":["legacy/hunt.ts","pages/Home.tsx","components/Canvas.tsx","pages/MapEditor.tsx","pages/ModelEditor.tsx","App.tsx","reportWebVitals.ts","index.tsx","kaitai/carnivores_map.js","kaitai/carnivores1_rsc.js"],"names":["areaPath","mapScale","terrainTexSize","createMapGeometry","map","geo","PlaneBufferGeometry","mapSize","rotateX","Math","PI","i","attributes","position","setY","heightMap","computeVertexNormals","createTextureArray","rsc","data","Uint8Array","textureCount","offset","j","pixel","textures","tex","DataTexture2DArray","type","UnsignedByteType","format","RGBFormat","wrapT","wrapS","RepeatWrapping","createInstancedModels","parent","matrices","halfMapSize","getHeight","x","y","matrix","Matrix4","obj","objectMap","makeTranslation","push","apply","toArray","indicator","Mesh","SphereBufferGeometry","MeshLambertMaterial","color","set","add","models","forEach","mdl","count","length","vertices","faces","idx","BufferGeometry","uv","index","findUvForVertex","vIdx","u","v","z","f","a","v1","b","v2","c","v3","tax","tay","tbx","tby","tcx","tcy","setAttribute","Float32BufferAttribute","setIndex","createGeometry","texData","texSize","width","height","DataTexture","RGBAFormat","needsUpdate","createTexture","textureData","textureSize","mesh","InstancedMesh","transparent","alphaTest","fromArray","setMatrixAt","buildDataMap","textureMap1","flagsMap","lightMap","RGBIntegerFormat","internalFormat","flipY","area","scene","Group","fetch","then","body","arrayBuffer","mapBuffer","rscBuffer","MAP","KaitaiStream","RSC","mat","MeshBasicMaterial","onBeforeCompile","s","console","log","textureMap","uniforms","value","vs","vertexShader","replace","fs","fragmentShader","error","undefined","Terrain","setLoading","useThree","React","useEffect","time","loadArea","world","timeEnd","Home","useState","isLoading","className","shadows","linear","camera","fov","near","far","Stats","args","shadow-mapSize-width","shadow-mapSize-height","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","shadow-camera-far","castShadow","OrbitControls","Canvas","drawContent","props","canvasRef","useRef","canvas","current","context","getContext","fillStyle","fillRect","ref","generateHeightmap","field","imageData","ImageData","BitSelect","bitCount","onChange","event","parseFloat","target","Array","fill","_","MapEditor","setMap","mapName","setMapName","bitR","setBitR","bitG","setBitG","bitB","setBitB","mode","setMode","getImageData","r","g","bitToColorChannel","flags","bit","val","generateFlagsMap","onDragOver","ev","preventDefault","onDrop","dataTransfer","files","name","url","URL","createObjectURL","buf","style","margin","userSelect","parseInt","onClick","document","createElement","ctx","putImageData","dataImage","toDataURL","link","click","ModelEditor","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","define","Carnivores1Map","_io","_parent","_root","this","_read","prototype","readBytes","isV1","readU1","readU2le","textureMap2","isV2","dawnLightMap","dayLightMap","nightLightMap","waterMap","objectHeightMap","fogsMap","floor","ambientMap","Object","defineProperty","get","_m_isV1","size","_m_isV2","_m_isValid","_m_mapSize","CarnivoresRsc","readU4le","modelCount","skyRgb","Rgb","skyTRgb","Texture","Model","skyTexture","skyTextureSize","skyMap","fogCount","fogList","FogEntry","randomSoundCount","randomSounds","RandomSound","ambientSoundCount","ambientSounds","AmbientSound","Vertex","readF4le","owner","readS2le","hide","modelInfo","ModelInfo","vertCount","faceCount","nodeCount","Face","nodes","Node","isAnimated","animation","ModelAnimation","Trd","rNumber","rVolume","rFrequency","rEnvironment","radius","readS4le","yLo","yHi","lineLength","lIntensity","circleRad","cIntensity","grRad","refLight","lastAniTime","boundR","reserved","_m_isAnimated","_m_notLighted","_m_needsBound","vc0","vc1","vc2","kps","frameCount","frames","dMask","distant","next","group","fogRgb","yBegin","mortal","transp","fLimit","pcmSize","pcm","rData","rsfxCount","aVolume","bytesToStr","bytesTerminate","_m_size","_m_skyTextureSize"],"mappings":"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","file":"static/js/main.d8cff7a4.chunk.js","sourcesContent":["// TODO: \n// - Use RGBA5551 texture data directly, do not convert to RGB888(8)\n// - Use MeshBasicMaterial, no light sources in Carnivores\n//      (can add support for dynamic lighting/shadows later, by generating normal map)\n// - Use lighting map in fragment shader (set initial diffuseColor before sampling texture array)\n\nimport KaitaiStream from 'kaitai-struct/KaitaiStream';\nimport {\n    BufferGeometry,\n    DataTexture,\n    DataTexture2DArray,\n    Float32BufferAttribute,\n    Group,\n    InstancedMesh,\n    Matrix4,\n    Mesh,\n    MeshLambertMaterial,\n    MeshBasicMaterial,\n    PlaneBufferGeometry,\n    RepeatWrapping,\n    RGBAFormat,\n    RGBFormat,\n    RGIntegerFormat,\n    SphereBufferGeometry,\n    UnsignedByteType,\n    RGBIntegerFormat,\n} from 'three';\n\nimport MAP from '../kaitai/carnivores_map';\nimport RSC from '../kaitai/carnivores1_rsc';\n\nconst areaPath = 'HUNTDAT/AREAS';\n\nconst mapScale = 256; // size of one map square\nconst mapHScale = 32; // Y scale for heightfield\nconst terrainTexSize = 128; // terrain textures are 128x128 pix\n\nfunction createMapGeometry(map: any) {\n    // Create a plane with divisions as base for map heightfield\n    const geo = new PlaneBufferGeometry(\n        map.mapSize * mapScale, map.mapSize * mapScale,\n        map.mapSize - 1, map.mapSize - 1\n    );\n\n    // Lay it flat\n    geo.rotateX(-Math.PI / 2);\n\n    // Set heights based on heightfield\n    for (let i = 0; i < map.mapSize * map.mapSize; i++) {\n        geo.attributes.position.setY(i, map.heightMap[i] * mapHScale);\n    }\n\n    // Compute normals for lighting\n    geo.computeVertexNormals();\n\n    return geo;\n}\n\nfunction createTextureArray(rsc: any) {\n    // create data array\n    const data = new Uint8Array(rsc.textureCount * terrainTexSize * terrainTexSize * 3);\n\n    // copy texture data\n    let offset = 0;\n    for (let i = 0; i < rsc.textureCount; i++) {\n        for (let j = 0; j < terrainTexSize * terrainTexSize; j++) {\n            let pixel = rsc.textures[i].data[j];\n            data[offset++] = ((pixel >> 10) & 0x1f) << 3;\n            data[offset++] = ((pixel >>  5) & 0x1f) << 3;\n            data[offset++] = ((pixel >>  0) & 0x1f) << 3;\n        }\n    }\n\n    let tex = new DataTexture2DArray(data, terrainTexSize, terrainTexSize, rsc.textureCount);\n    tex.type = UnsignedByteType;\n    tex.format = RGBFormat;\n    tex.wrapT = tex.wrapS = RepeatWrapping;\n    return tex;\n}\n\nfunction createGeometry(vertices: any[], faces: any[]) {\n    let geo = new BufferGeometry();\n    let position: number[] = [];\n    let uv: number[] = [];\n    let index: number[] = [];\n    vertices.forEach(v => {\n        position.push(v.x, v.y, v.z);\n    });\n    function findUvForVertex(vIdx: number, u: number, v: number) {\n        // TODO: look for duplicate UVs and reuse\n        uv[vIdx * 2 + 0] = u;\n        uv[vIdx * 2 + 1] = v;\n        return vIdx;\n    }\n    let idx;\n    faces.forEach(f => {\n        let a = f.v1, b = f.v2, c = f.v3;\n\n        idx = findUvForVertex(a, f.tax / 256, f.tay / 256);\n        index.push(idx);\n        idx = findUvForVertex(b, f.tbx / 256, f.tby / 256);\n        index.push(idx);\n        idx = findUvForVertex(c, f.tcx / 256, f.tcy / 256);\n        index.push(idx);\n    });\n\n    geo.setAttribute('position', new Float32BufferAttribute(position, 3));\n    geo.setAttribute('uv', new Float32BufferAttribute(uv, 2));\n    geo.setIndex(index);\n    geo.computeVertexNormals();\n\n    return geo;\n}\n\nfunction createTexture(texData: Uint16Array, texSize: number) {\n    let width = 256;\n    let height = texSize / (width * 2);\n  \n    let data = new Uint8Array(width * height * 4);\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        let pixel = texData[y * width + x];\n        let offset = (y * width + x) * 4;\n        data[offset++] = ((pixel >> 10) & 0x1f) << 3;\n        data[offset++] = ((pixel >>  5) & 0x1f) << 3;\n        data[offset++] = ((pixel >>  0) & 0x1f) << 3;\n        data[offset++] = pixel ? 0xff : 0;\n      }\n    }\n  \n    const tex = new DataTexture(\n        data, width, height,\n        RGBAFormat, UnsignedByteType,\n    );\n    tex.needsUpdate = true;\n    return tex;\n  }\n\nfunction createInstancedModels(rsc: any, map: any, parent: Group) {\n\n    const matrices: number[][] = [];\n\n    const mapSize = map.mapSize;\n    const halfMapSize = mapSize / 2;\n\n    function getHeight(x: number, y: number) {\n        return map.heightMap[y * map.mapSize + x] * mapHScale;\n    }\n\n    const matrix = new Matrix4();\n    for (let y = 0; y < mapSize; y++) {\n        for (let x = 0; x < mapSize; x++) {\n            const obj = map.objectMap[y * mapSize + x];\n            if (obj < 254) {\n                matrix.makeTranslation(\n                    (x - halfMapSize) * mapScale,\n                    getHeight(x, y),\n                    (y - halfMapSize) * mapScale)\n                if (!matrices[obj]) {\n                    matrices[obj] = matrix.toArray();\n                } else {\n                    matrices[obj].push.apply(matrices[obj], matrix.toArray())\n                }\n            } else if (obj === 254) {\n                // Landing list\n                const indicator = new Mesh(\n                    new SphereBufferGeometry(128),\n                    new MeshLambertMaterial({ color: 0xff0000 }),\n                )\n                indicator.position.set(\n                    (x - halfMapSize) * mapScale,\n                    getHeight(x, y),\n                    (y - halfMapSize) * mapScale);\n\n                parent.add(indicator);\n            } else if (obj === 255) {\n                // empty\n            }\n        }\n    }\n\n    rsc.models.forEach((mdl: any, obj: number) => {\n        if (matrices[obj]) {\n            const count = matrices[obj].length / 16;\n            const geo = createGeometry(mdl.vertices, mdl.faces);\n            const tex = createTexture(mdl.textureData, mdl.textureSize);\n            const mesh = new InstancedMesh(\n                geo, new MeshLambertMaterial({ map: tex, transparent: true, alphaTest: 0.5 }),\n                count,\n            );\n            for (let i = 0; i < count; i++) {\n                matrix.fromArray(matrices[obj], i * 16)\n                mesh.setMatrixAt(i, matrix)\n            }\n            parent.add(mesh)\n        }\n    })\n}\n\nfunction buildDataMap(map: any) {\n    const data = new Uint8Array(map.mapSize * map.mapSize * 3);\n    for (let i = 0; i < map.mapSize * map.mapSize; i++) {\n        data[i*3+0] = map.textureMap1[i];\n        data[i*3+1] = map.flagsMap[i];\n        data[i*3+2] = map.lightMap[i];\n    }\n    let tex = new DataTexture(data, 512, 512, RGBIntegerFormat, UnsignedByteType);\n    tex.internalFormat = 'RGB8UI';\n    tex.flipY = true;\n\n    return tex;\n}\n\nexport async function loadArea(area: string) {\n    let scene = new Group();\n\n    try {\n        const mapBuffer = await fetch(`${areaPath}/${area}.MAP`).then(body => body.arrayBuffer());\n        const rscBuffer = await fetch(`${areaPath}/${area}.RSC`).then(body => body.arrayBuffer());\n\n        const map = new MAP(new KaitaiStream(mapBuffer));\n        const rsc = new RSC(new KaitaiStream(rscBuffer));\n\n        const geo = createMapGeometry(map)\n\n        createInstancedModels(rsc, map, scene);\n\n        let mat = new MeshBasicMaterial({ map: createTextureArray(rsc) });\n        mat.onBeforeCompile = s => {\n            console.log(s, map, rsc)\n            let textureMap = buildDataMap(map);\n            s.uniforms['textureMap'] = {\n                value: textureMap,\n            };\n            // Adjust vertex shader\n            let vs = s.vertexShader;\n            vs = vs.replace('#include <common>', `\n                precision highp usampler2D;\n                uniform usampler2D textureMap;\n                varying vec4 vLighting;\n            `)\n            vs = vs.replace('#include <color_vertex>', `\n                uvec4 tex = texture(textureMap, vUv);\n                float light = 1.0 - (float(tex.b) / 64.0);\n                vLighting = vec4(light, light, light, 1.0);\n                #include <color_vertex>\n            `)\n            s.vertexShader = vs;\n            // Adjust the fragment shader\n            let fs = s.fragmentShader;\n            fs = fs.replace('#include <map_pars_fragment>', `\n            precision highp sampler2DArray;\n            precision highp usampler2D;\n            uniform sampler2DArray map;\n            uniform usampler2D textureMap;\n            varying vec4 vLighting;\n            `);\n            fs = fs.replace('#include <map_fragment>', `\n            const float mapRes = 512.0;\n            const float tileUvStep = 1.0 / mapRes;\n            vec2 localTileUv = mod(vUv, tileUvStep) * mapRes;\n            uvec4 tex = texture(textureMap, vUv);\n            uint rotation = tex.b & 3u;\n            localTileUv.y = 1.0 - localTileUv.y;\n            switch(tex.g & 3u) {\n                case 0u:\n                    //diffuseColor = vec4(1.0, 1.0, 1.0, 1.0);\n                    break;\n                case 1u:\n                    float t = localTileUv.x;\n                    localTileUv.x = localTileUv.y;\n                    localTileUv.y = 1.0 - t;\n                    //diffuseColor = vec4(0.5, 0.0, 0.0, 1.0);\n                    break;\n                case 2u:\n                    localTileUv.x = 1.0 - localTileUv.x;\n                    localTileUv.y = 1.0 - localTileUv.y;\n                    //diffuseColor = vec4(0.5, 0.5, 0.0, 1.0);\n                    break;\n                case 3u:\n                    float x = localTileUv.x;\n                    localTileUv.x = 1.0 - localTileUv.y;\n                    localTileUv.y = x;\n                    //diffuseColor = vec4(0.0, 0.0, 1.0, 1.0);\n                    break;\n            }\n            diffuseColor = vLighting;\n            vec4 texelColor = texture( map, vec3(localTileUv, tex.r) );\n            texelColor = mapTexelToLinear( texelColor );\n            diffuseColor *= texelColor;\n            `)\n            s.fragmentShader = fs;\n        }\n\n        // Okay, terrain done!\n        scene.add(new Mesh(geo, mat));\n    } catch (e) {\n        console.error(e)\n        return undefined;\n    }\n\n    return scene;\n}\n","import React from 'react'\n\nimport { Stats, OrbitControls, PointerLockControls } from '@react-three/drei'\nimport { Canvas, useThree } from '@react-three/fiber'\n\nimport { loadArea } from '../legacy/hunt'\n\nimport './Home.css'\nimport Player from '../Player'\n\ninterface Props {\n    setLoading: (isLoading: boolean) => void;\n}\n\nfunction Terrain({ setLoading }: Props) {\n    const { scene } = useThree();\n\n    function getHeightAt(x: number, z: number): number {\n        return 1500;\n    }\n\n    console.log('Terrain')\n    React.useEffect(() => {\n        console.time(\"loadArea\");\n        loadArea(\"AREA1\").then(world => {\n            console.timeEnd(\"loadArea\");\n            if (world) {\n                scene.add(world)\n            }\n            setLoading(false);\n        })\n    }, [setLoading, scene])\n    return <></> //<Player getHeightAt={getHeightAt} />;\n}\n\nexport default function Home() {\n    const [ isLoading, setLoading ] = React.useState(true);\n\n    return (\n        <>\n            {isLoading && (<div className=\"center\"><p>Loading, please wait</p></div>)}\n            <Canvas\n                shadows\n                linear\n                camera={{\n                    position: [ 0, 12000, 12000 ],\n                    fov: 30,\n                    near: 1,\n                    far: 1000000,\n                }}\n            >\n                <Stats />\n                <directionalLight\n                    args={[0xdfebff, 1]}\n                    position={[50, 200, 100]}\n                    shadow-mapSize-width={1024}\n                    shadow-mapSize-height={1024}\n                    shadow-camera-left={-300}\n                    shadow-camera-right={300}\n                    shadow-camera-top={300}\n                    shadow-camera-bottom={-300}\n                    shadow-camera-far={1000}\n                    castShadow\n                />\n                <ambientLight\n                    args={[0x666666]}\n                />\n\n                <OrbitControls />\n\n                <Terrain setLoading={setLoading} />\n            </Canvas>\n        </>\n    )\n}\n","//https://medium.com/@pdx.lucasm/canvas-with-react-js-32e133c05258\nimport React from 'react';\n\ninterface CanvasProps {\n    width?: number;\n    height?: number;\n    drawContent?: (context: CanvasRenderingContext2D) => void;\n}\n\nconst Canvas: React.FC<CanvasProps> = ({drawContent, width, height, ...props}) => {\n    const canvasRef = React.useRef<HTMLCanvasElement>(null)\n\n    React.useEffect(() => {\n        const canvas = canvasRef.current\n        const context = canvas?.getContext('2d')\n        if (canvas && context) {\n            if (width !== undefined) {\n                context.canvas.width = width;\n            }\n            if (height !== undefined) {\n                context.canvas.height = height;\n            }\n            if (drawContent) {\n                drawContent(context);\n            } else {\n                context.fillStyle = '#000000'\n                context.fillRect(0, 0, context.canvas.width, context.canvas.height)\n            }\n        }\n    }, [drawContent, height, width])\n\n\n    return (\n        <canvas\n            ref={canvasRef}\n            {...props}\n        />\n    );\n}\n\nexport default Canvas;\n","import React from 'react'\n\nimport KaitaiStream from 'kaitai-struct/KaitaiStream';\nimport MAP from '../kaitai/carnivores_map';\nimport Canvas from '../components/Canvas';\n\nconst generateHeightmap = (map: any, field: string) => {\n    let imageData = new ImageData(map.mapSize, map.mapSize);\n    for (let i = 0; i < map.mapSize * map.mapSize; i++) {\n        imageData.data[i*4+0] = map[field][i];\n        imageData.data[i*4+1] = map[field][i];\n        imageData.data[i*4+2] = map[field][i];\n        imageData.data[i*4+3] = 0xff;\n    }\n    return imageData;\n}\n\nconst generateFlagsMap = (map: any, r: number, g: number, b: number) => {\n    let imageData = new ImageData(map.mapSize, map.mapSize);\n    const bitToColorChannel = (flags: number, bit: number) => ((flags & (1 << bit)) !== 0 ? 0 : 255);\n    for (let i = 0; i < map.mapSize * map.mapSize; i++) {\n        let val = map.flagsMap[i];\n        imageData.data[i*4+0] = r !== -1 ? bitToColorChannel(val, r) : 0;\n        imageData.data[i*4+1] = g !== -1 ? bitToColorChannel(val, g) : 0;\n        imageData.data[i*4+2] = b !== -1 ? bitToColorChannel(val, b) : 0;\n        imageData.data[i*4+3] = 0xff;\n    }\n    return imageData;\n}\n\ninterface BitSelectProps {\n    bitCount: number;\n    value: number;\n    onChange: (bit: number) => void;\n}\n\nconst BitSelect: React.FC<BitSelectProps> = ({\n    value = 0,\n    bitCount = 8,\n    onChange,\n}) => {\n    return (\n        <select value={value} onChange={event => onChange(parseFloat(event.target.value))}>\n            <option value=\"-1\">n/a</option>\n            {new Array(bitCount).fill(0).map((_,i) => (\n                <option key={i} value={i}>bit {i}</option>\n            ))}\n        </select>\n    )\n}\n\nexport default function MapEditor() {\n    const [ map, setMap ] = React.useState<any>(null);\n    const [ mapName, setMapName ] = React.useState<string|null>(null);\n    const [ bitR, setBitR ] = React.useState(-1);\n    const [ bitG, setBitG ] = React.useState(-1);\n    const [ bitB, setBitB ] = React.useState(-1);\n    const [ mode, setMode ] = React.useState(1);\n\n    function dragOver(ev: React.DragEvent) {\n        ev.preventDefault();\n    } \n\n    function drop(ev: React.DragEvent) {\n        ev.preventDefault();\n        if (ev.dataTransfer.files?.length) {\n            const mapName = ev.dataTransfer.files[0].name;\n            const url = URL.createObjectURL(ev.dataTransfer.files[0]);\n            // fetch URL (retrieves local file, no physical network involved)\n            fetch(url).then(body => body.arrayBuffer()).then(buf => {\n                // Create KaitaiStream and load map\n                const map = new MAP(new KaitaiStream(buf));\n                setMapName(mapName);\n                setMap(map);\n            });\n        }\n    }\n\n    const getImageData = () => {\n        let imageData: ImageData | undefined;\n\n        switch(mode) {\n            case 0: // Flags\n                imageData = generateFlagsMap(map, bitR, bitG, bitB);\n                break;\n\n            case 1: // Heightmap\n                imageData = generateHeightmap(map, 'heightMap');\n                break;\n\n            case 2: // Watertmap\n                imageData = generateHeightmap(map, 'waterMap');\n                break;\n        }\n\n        return imageData;\n    }\n\n    const drawMapContent = (ctx: CanvasRenderingContext2D) => {\n        const imageData = getImageData();\n        if (imageData) {\n            ctx.putImageData(imageData, 0, 0);\n        }\n    }\n\n    const downloadImageData = () => {\n        const imageData = getImageData();\n        if (imageData) {\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext(\"2d\");\n            if (ctx) {\n                ctx.canvas.width = imageData.width;\n                ctx.canvas.height = imageData.height;\n                ctx.putImageData(imageData, 0, 0);\n                var dataImage = canvas.toDataURL(\"image/png\");\n\n                let name: string = mapName?.replace(/\\.MAP$/i, '') || '';\n                switch(mode) {\n                    case 0:\n                        name += `-r${bitR}g${bitG}b${bitB}.png`;\n                        break;\n                    case 1: \n                        name += '-height.png';\n                        break;\n                    case 2: \n                        name += '-water.png';\n                        break;\n                }\n\n                const link = document.createElement('a');\n                link.setAttribute('download', name);\n                link.setAttribute('href', dataImage.replace(\"image/png\", \"image/octet-stream\"));\n                link.click();\n            }\n        }\n    }\n\n    return (\n        <div onDragOver={dragOver} onDrop={drop} style={{width: '100%', height: '100%', margin: '5px', userSelect: 'text'}}>\n            {map && mapName ? (\n                <>\n                    <h1>{mapName}</h1>\n                    <select value={mode} onChange={ev => setMode(parseInt(ev.target.value))}>\n                        <option value=\"0\">Flags</option>\n                        <option value=\"1\">Heightmap</option>\n                        <option value=\"2\">Watermap</option>\n                    </select>\n                    {\n                        mode === 0 && (\n                            <>\n                                <BitSelect value={bitR} bitCount={16} onChange={bit => setBitR(bit)} />\n                                <BitSelect value={bitG} bitCount={16} onChange={bit => setBitG(bit)} />\n                                <BitSelect value={bitB} bitCount={16} onChange={bit => setBitB(bit)} />      \n                            </>\n                        )\n                    }\n                    <button\n                        onClick={downloadImageData}\n                        >\n                            Download\n                    </button>\n                    <br/>\n                    <br/>\n                    <Canvas\n                        width={map.mapSize}\n                        height={map.mapSize}\n                        drawContent={drawMapContent}\n                    />\n                </>\n            ) : (\n                <h1>Drop a Carnivores 1/2/IceAge MAP file here</h1>\n            )}\n        </div>\n    )\n}","import React from 'react'\n\nexport default function ModelEditor() {\n    return (\n        <div />\n    )\n}","import React from 'react'\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport MapEditor from './pages/MapEditor';\nimport ModelEditor from './pages/ModelEditor';\n\nexport default function App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/edit-map\">\n          <MapEditor />\n        </Route>\n        <Route path=\"/edit-model\">\n          <ModelEditor />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// This is a generated file! Please edit source .ksy file and use kaitai-struct-compiler to rebuild\n/* eslint-disable */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['kaitai-struct/KaitaiStream'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory(require('kaitai-struct/KaitaiStream'));\n  } else {\n    root.Carnivores1Map = factory(root.KaitaiStream);\n  }\n}(this, function (KaitaiStream) {\nvar Carnivores1Map = (function() {\n  function Carnivores1Map(_io, _parent, _root) {\n    this._io = _io;\n    this._parent = _parent;\n    this._root = _root || this;\n\n    this._read();\n  }\n  Carnivores1Map.prototype._read = function() {\n    this.heightMap = this._io.readBytes((this.mapSize * this.mapSize));\n    this.textureMap1 = new Array((this.mapSize * this.mapSize));\n    for (var i = 0; i < (this.mapSize * this.mapSize); i++) {\n      switch (this.isV1) {\n      case true:\n        this.textureMap1[i] = this._io.readU1();\n        break;\n      case false:\n        this.textureMap1[i] = this._io.readU2le();\n        break;\n      }\n    }\n    this.textureMap2 = new Array((this.mapSize * this.mapSize));\n    for (var i = 0; i < (this.mapSize * this.mapSize); i++) {\n      switch (this.isV1) {\n      case true:\n        this.textureMap2[i] = this._io.readU1();\n        break;\n      case false:\n        this.textureMap2[i] = this._io.readU2le();\n        break;\n      }\n    }\n    this.objectMap = this._io.readBytes((this.mapSize * this.mapSize));\n    this.flagsMap = new Array((this.mapSize * this.mapSize));\n    for (var i = 0; i < (this.mapSize * this.mapSize); i++) {\n      switch (this.isV1) {\n      case true:\n        this.flagsMap[i] = this._io.readU1();\n        break;\n      case false:\n        this.flagsMap[i] = this._io.readU2le();\n        break;\n      }\n    }\n    if (this.isV1) {\n      this.lightMap = this._io.readBytes((this.mapSize * this.mapSize));\n    }\n    if (this.isV2) {\n      this.dawnLightMap = this._io.readBytes((this.mapSize * this.mapSize));\n    }\n    if (this.isV2) {\n      this.dayLightMap = this._io.readBytes((this.mapSize * this.mapSize));\n    }\n    if (this.isV2) {\n      this.nightLightMap = this._io.readBytes((this.mapSize * this.mapSize));\n    }\n    this.waterMap = this._io.readBytes((this.mapSize * this.mapSize));\n    this.objectHeightMap = this._io.readBytes((this.mapSize * this.mapSize));\n    this.fogsMap = this._io.readBytes(Math.floor((this.mapSize * this.mapSize) / 4));\n    this.ambientMap = this._io.readBytes(Math.floor((this.mapSize * this.mapSize) / 4));\n  }\n  Object.defineProperty(Carnivores1Map.prototype, 'isV1', {\n    get: function() {\n      if (this._m_isV1 !== undefined)\n        return this._m_isV1;\n      this._m_isV1 = this._io.size == 2228224;\n      return this._m_isV1;\n    }\n  });\n  Object.defineProperty(Carnivores1Map.prototype, 'isV2', {\n    get: function() {\n      if (this._m_isV2 !== undefined)\n        return this._m_isV2;\n      this._m_isV2 = this._io.size == 14155776;\n      return this._m_isV2;\n    }\n  });\n  Object.defineProperty(Carnivores1Map.prototype, 'isValid', {\n    get: function() {\n      if (this._m_isValid !== undefined)\n        return this._m_isValid;\n      this._m_isValid =  ((this.isV1) || (this.isV2)) ;\n      return this._m_isValid;\n    }\n  });\n  Object.defineProperty(Carnivores1Map.prototype, 'mapSize', {\n    get: function() {\n      if (this._m_mapSize !== undefined)\n        return this._m_mapSize;\n      this._m_mapSize = (this.isV1 ? 512 : 1024);\n      return this._m_mapSize;\n    }\n  });\n\n  /**\n   * Terrain heightmap, for water tiles it specifies the water surface height\n   */\n\n  /**\n   * Terrain texture map, every byte specifies a texture index for the terrain\n   */\n\n  /**\n   * Object placement map, every byte specifies an object (< 254), a spawn location (254), or no model (255)\n   */\n\n  /**\n   * Flags map, specifies render flags per tile. This includes rotation of terrain texture, of object, and more.\n   */\n\n  /**\n   * Light map, specifies lighting of placed objects\n   */\n\n  /**\n   * Water heightmap, specifies \"sea floor\" terrain heights\n   */\n\n  /**\n   * Object heightmap, height placement of objects (flags map can specify to align to sea floor level or terrain ground level too)\n   */\n\n  /**\n   * Fog map, which areas are covered in fog in game.\n   */\n\n  /**\n   * Ambient sounds map\n   */\n\n  return Carnivores1Map;\n})();\nreturn Carnivores1Map;\n}));\n","// This is a generated file! Please edit source .ksy file and use kaitai-struct-compiler to rebuild\n/* eslint-disable */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['kaitai-struct/KaitaiStream'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory(require('kaitai-struct/KaitaiStream'));\n  } else {\n    root.CarnivoresRsc = factory(root.KaitaiStream);\n  }\n}(this, function (KaitaiStream) {\nvar CarnivoresRsc = (function() {\n  function CarnivoresRsc(_io, _parent, _root) {\n    this._io = _io;\n    this._parent = _parent;\n    this._root = _root || this;\n\n    this._read();\n  }\n  CarnivoresRsc.prototype._read = function() {\n    this.textureCount = this._io.readU4le();\n    this.modelCount = this._io.readU4le();\n    this.skyRgb = new Rgb(this._io, this, this._root);\n    this.skyTRgb = new Rgb(this._io, this, this._root);\n    this.textures = new Array(this.textureCount);\n    for (var i = 0; i < this.textureCount; i++) {\n      this.textures[i] = new Texture(this._io, this, this._root);\n    }\n    this.models = new Array(this.modelCount);\n    for (var i = 0; i < this.modelCount; i++) {\n      this.models[i] = new Model(this._io, this, this._root);\n    }\n    this.skyTexture = new Array(Math.floor(this.skyTextureSize / 2));\n    for (var i = 0; i < Math.floor(this.skyTextureSize / 2); i++) {\n      this.skyTexture[i] = this._io.readU2le();\n    }\n    this.skyMap = this._io.readBytes((128 * 128));\n    this.fogCount = this._io.readU4le();\n    this.fogList = new Array(this.fogCount);\n    for (var i = 0; i < this.fogCount; i++) {\n      this.fogList[i] = new FogEntry(this._io, this, this._root);\n    }\n    this.randomSoundCount = this._io.readU4le();\n    this.randomSounds = new Array(this.randomSoundCount);\n    for (var i = 0; i < this.randomSoundCount; i++) {\n      this.randomSounds[i] = new RandomSound(this._io, this, this._root);\n    }\n    this.ambientSoundCount = this._io.readU4le();\n    this.ambientSounds = new Array(this.ambientSoundCount);\n    for (var i = 0; i < this.ambientSoundCount; i++) {\n      this.ambientSounds[i] = new AmbientSound(this._io, this, this._root);\n    }\n  }\n\n  var Rgb = CarnivoresRsc.Rgb = (function() {\n    function Rgb(_io, _parent, _root) {\n      this._io = _io;\n      this._parent = _parent;\n      this._root = _root || this;\n\n      this._read();\n    }\n    Rgb.prototype._read = function() {\n      this.r = this._io.readU4le();\n      this.g = this._io.readU4le();\n      this.b = this._io.readU4le();\n    }\n\n    return Rgb;\n  })();\n\n  var Vertex = CarnivoresRsc.Vertex = (function() {\n    function Vertex(_io, _parent, _root) {\n      this._io = _io;\n      this._parent = _parent;\n      this._root = _root || this;\n\n      this._read();\n    }\n    Vertex.prototype._read = function() {\n      this.x = this._io.readF4le();\n      this.y = this._io.readF4le();\n      this.z = this._io.readF4le();\n      this.owner = this._io.readS2le();\n      this.hide = this._io.readU2le();\n    }\n\n    return Vertex;\n  })();\n\n  var Model = CarnivoresRsc.Model = (function() {\n    function Model(_io, _parent, _root) {\n      this._io = _io;\n      this._parent = _parent;\n      this._root = _root || this;\n\n      this._read();\n    }\n    Model.prototype._read = function() {\n      this.modelInfo = new ModelInfo(this._io, this, this._root);\n      this.vertCount = this._io.readU4le();\n      this.faceCount = this._io.readU4le();\n      this.nodeCount = this._io.readU4le();\n      this.textureSize = this._io.readU4le();\n      this.faces = new Array(this.faceCount);\n      for (var i = 0; i < this.faceCount; i++) {\n        this.faces[i] = new Face(this._io, this, this._root);\n      }\n      this.vertices = new Array(this.vertCount);\n      for (var i = 0; i < this.vertCount; i++) {\n        this.vertices[i] = new Vertex(this._io, this, this._root);\n      }\n      this.nodes = new Array(this.nodeCount);\n      for (var i = 0; i < this.nodeCount; i++) {\n        this.nodes[i] = new Node(this._io, this, this._root);\n      }\n      this.textureData = new Array(Math.floor(this.textureSize / 2));\n      for (var i = 0; i < Math.floor(this.textureSize / 2); i++) {\n        this.textureData[i] = this._io.readU2le();\n      }\n      if (this.modelInfo.isAnimated) {\n        this.animation = new ModelAnimation(this._io, this, this._root);\n      }\n    }\n\n    return Model;\n  })();\n\n  var Trd = CarnivoresRsc.Trd = (function() {\n    function Trd(_io, _parent, _root) {\n      this._io = _io;\n      this._parent = _parent;\n      this._root = _root || this;\n\n      this._read();\n    }\n    Trd.prototype._read = function() {\n      this.rNumber = this._io.readU4le();\n      this.rVolume = this._io.readU4le();\n      this.rFrequency = this._io.readU4le();\n      this.rEnvironment = this._io.readU4le();\n    }\n\n    return Trd;\n  })();\n\n  var ModelInfo = CarnivoresRsc.ModelInfo = (function() {\n    function ModelInfo(_io, _parent, _root) {\n      this._io = _io;\n      this._parent = _parent;\n      this._root = _root || this;\n\n      this._read();\n    }\n    ModelInfo.prototype._read = function() {\n      this.radius = this._io.readS4le();\n      this.yLo = this._io.readS4le();\n      this.yHi = this._io.readS4le();\n      this.lineLength = this._io.readS4le();\n      this.lIntensity = this._io.readS4le();\n      this.circleRad = this._io.readS4le();\n      this.cIntensity = this._io.readS4le();\n      this.flags = this._io.readU4le();\n      this.grRad = this._io.readS4le();\n      this.refLight = this._io.readS4le();\n      this.lastAniTime = this._io.readU4le();\n      this.boundR = this._io.readF4le();\n      this.reserved = this._io.readBytes(16);\n    }\n    Object.defineProperty(ModelInfo.prototype, 'isAnimated', {\n      get: function() {\n        if (this._m_isAnimated !== undefined)\n          return this._m_isAnimated;\n        this._m_isAnimated = (this.flags & 2147483648) != 0;\n        return this._m_isAnimated;\n      }\n    });\n    Object.defineProperty(ModelInfo.prototype, 'notLighted', {\n      get: function() {\n        if (this._m_notLighted !== undefined)\n          return this._m_notLighted;\n        this._m_notLighted = (this.flags & 64) != 0;\n        return this._m_notLighted;\n      }\n    });\n    Object.defineProperty(ModelInfo.prototype, 'needsBound', {\n      get: function() {\n        if (this._m_needsBound !== undefined)\n          return this._m_needsBound;\n        this._m_needsBound = (this.flags & 16) != 0;\n        return this._m_needsBound;\n      }\n    });\n\n    return ModelInfo;\n  })();\n\n  var ModelAnimation = CarnivoresRsc.ModelAnimation = (function() {\n    function ModelAnimation(_io, _parent, _root) {\n      this._io = _io;\n      this._parent = _parent;\n      this._root = _root || this;\n\n      this._read();\n    }\n    ModelAnimation.prototype._read = function() {\n      this.vc0 = this._io.readU4le();\n      this.vc1 = this._io.readU4le();\n      this.vc2 = this._io.readU4le();\n      this.kps = this._io.readU4le();\n      this.frameCount = this._io.readU4le();\n      this.frames = new Array(((this.frameCount * 3) * this.vc1));\n      for (var i = 0; i < ((this.frameCount * 3) * this.vc1); i++) {\n        this.frames[i] = this._io.readS2le();\n      }\n    }\n\n    return ModelAnimation;\n  })();\n\n  var Face = CarnivoresRsc.Face = (function() {\n    function Face(_io, _parent, _root) {\n      this._io = _io;\n      this._parent = _parent;\n      this._root = _root || this;\n\n      this._read();\n    }\n    Face.prototype._read = function() {\n      this.v1 = this._io.readU4le();\n      this.v2 = this._io.readU4le();\n      this.v3 = this._io.readU4le();\n      this.tax = this._io.readS4le();\n      this.tbx = this._io.readS4le();\n      this.tcx = this._io.readS4le();\n      this.tay = this._io.readS4le();\n      this.tby = this._io.readS4le();\n      this.tcy = this._io.readS4le();\n      this.flags = this._io.readU2le();\n      this.dMask = this._io.readU2le();\n      this.distant = this._io.readS4le();\n      this.next = this._io.readU4le();\n      this.group = this._io.readU4le();\n      this.reserved = this._io.readBytes(12);\n    }\n\n    return Face;\n  })();\n\n  var FogEntry = CarnivoresRsc.FogEntry = (function() {\n    function FogEntry(_io, _parent, _root) {\n      this._io = _io;\n      this._parent = _parent;\n      this._root = _root || this;\n\n      this._read();\n    }\n    FogEntry.prototype._read = function() {\n      this.fogRgb = this._io.readU4le();\n      this.yBegin = this._io.readF4le();\n      this.mortal = this._io.readU4le();\n      this.transp = this._io.readF4le();\n      this.fLimit = this._io.readF4le();\n    }\n\n    return FogEntry;\n  })();\n\n  var AmbientSound = CarnivoresRsc.AmbientSound = (function() {\n    function AmbientSound(_io, _parent, _root) {\n      this._io = _io;\n      this._parent = _parent;\n      this._root = _root || this;\n\n      this._read();\n    }\n    AmbientSound.prototype._read = function() {\n      this.pcmSize = this._io.readU4le();\n      this.pcm = this._io.readBytes(this.pcmSize);\n      this.rData = new Array(16);\n      for (var i = 0; i < 16; i++) {\n        this.rData[i] = new Trd(this._io, this, this._root);\n      }\n      this.rsfxCount = this._io.readU4le();\n      this.aVolume = this._io.readU4le();\n    }\n\n    return AmbientSound;\n  })();\n\n  var Node = CarnivoresRsc.Node = (function() {\n    function Node(_io, _parent, _root) {\n      this._io = _io;\n      this._parent = _parent;\n      this._root = _root || this;\n\n      this._read();\n    }\n    Node.prototype._read = function() {\n      this.name = KaitaiStream.bytesToStr(KaitaiStream.bytesTerminate(this._io.readBytes(32), 0, false), \"utf8\");\n      this.x = this._io.readF4le();\n      this.y = this._io.readF4le();\n      this.z = this._io.readF4le();\n      this.owner = this._io.readS2le();\n      this.hide = this._io.readU2le();\n    }\n\n    return Node;\n  })();\n\n  var RandomSound = CarnivoresRsc.RandomSound = (function() {\n    function RandomSound(_io, _parent, _root) {\n      this._io = _io;\n      this._parent = _parent;\n      this._root = _root || this;\n\n      this._read();\n    }\n    RandomSound.prototype._read = function() {\n      this.pcmSize = this._io.readU4le();\n      this.pcm = this._io.readBytes(this.pcmSize);\n    }\n\n    return RandomSound;\n  })();\n\n  var Texture = CarnivoresRsc.Texture = (function() {\n    function Texture(_io, _parent, _root) {\n      this._io = _io;\n      this._parent = _parent;\n      this._root = _root || this;\n\n      this._read();\n    }\n    Texture.prototype._read = function() {\n      this.data = new Array(Math.floor(this.size / 2));\n      for (var i = 0; i < Math.floor(this.size / 2); i++) {\n        this.data[i] = this._io.readU2le();\n      }\n    }\n    Object.defineProperty(Texture.prototype, 'size', {\n      get: function() {\n        if (this._m_size !== undefined)\n          return this._m_size;\n        this._m_size = ((128 * 128) * 2);\n        return this._m_size;\n      }\n    });\n\n    return Texture;\n  })();\n  Object.defineProperty(CarnivoresRsc.prototype, 'skyTextureSize', {\n    get: function() {\n      if (this._m_skyTextureSize !== undefined)\n        return this._m_skyTextureSize;\n      this._m_skyTextureSize = ((256 * 256) * 2);\n      return this._m_skyTextureSize;\n    }\n  });\n\n  return CarnivoresRsc;\n})();\nreturn CarnivoresRsc;\n}));\n"],"sourceRoot":""}