{"version":3,"sources":["legacy/hunt.ts","pages/Home.tsx","pages/MapEditor.tsx","pages/ModelEditor.tsx","App.tsx","reportWebVitals.ts","index.tsx","kaitai/carnivores1_map.js","kaitai/carnivores1_rsc.js"],"names":["areaPath","mapScale","terrainTexSize","createMapGeometry","map","geo","PlaneBufferGeometry","mapSize","rotateX","Math","PI","i","attributes","position","setY","heightMap","computeVertexNormals","toNonIndexed","createTextureAtlas","rsc","textureDim","ceil","sqrt","textureCount","textureStride","data","Uint8Array","top","floor","left","offset","y","x","pixel","textures","texSize","console","log","byteLength","tex","DataTexture","RGBFormat","UnsignedByteType","needsUpdate","setupTerrainUV","geometry","atlasTexture","image","width","uvStep","uv","uvidx","tidx","textureMap1","rot","fMap","ty","tx","coords","a","b","c","d","e","f","setX","createInstancedModels","parent","matrices","halfMapSize","getHeight","matrix","Matrix4","obj","oMap","makeTranslation","push","apply","toArray","indicator","Mesh","SphereBufferGeometry","MeshLambertMaterial","color","set","add","models","forEach","mdl","count","length","vertices","faces","idx","BufferGeometry","index","findUvForVertex","vIdx","u","v","z","v1","v2","v3","tax","tay","tbx","tby","tcx","tcy","setAttribute","Float32BufferAttribute","setIndex","createGeometry","texData","height","RGBAFormat","createTexture","textureData","textureSize","mesh","InstancedMesh","transparent","alphaTest","fromArray","setMatrixAt","area","scene","Group","fetch","then","body","arrayBuffer","mapBuffer","rscBuffer","MAP","KaitaiStream","RSC","error","undefined","Terrain","useThree","React","useEffect","time","loadArea","world","timeEnd","Home","shadows","linear","camera","fov","near","far","args","shadow-mapSize-width","shadow-mapSize-height","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","shadow-camera-far","castShadow","OrbitControls","maxPolarAngle","MapEditor","ModelEditor","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","define","Carnivores1Map","_io","_parent","_root","this","_read","prototype","readBytes","textureMap2","lightMap","waterMap","heightMap0","fogsMap","ambientMap","Object","defineProperty","get","_m_mapSize","CarnivoresRsc","readU4le","modelCount","skyRgb","Rgb","skyTRgb","Array","Texture","Model","skyTexture","skyTextureSize","readU2le","skyMap","fogCount","fogList","FogEntry","randomSoundCount","randomSounds","RandomSound","ambientSoundCount","ambientSounds","AmbientSound","r","g","Vertex","readF4le","owner","readS2le","hide","modelInfo","ModelInfo","vertCount","faceCount","nodeCount","Face","nodes","Node","isAnimated","animation","ModelAnimation","Trd","rNumber","rVolume","rFrequency","rEnvironment","radius","readS4le","yLo","yHi","lineLength","lIntensity","circleRad","cIntensity","flags","grRad","refLight","lastAniTime","boundR","reserved","_m_isAnimated","_m_notLighted","_m_needsBound","vc0","vc1","vc2","kps","frameCount","frames","dMask","distant","next","group","fogRgb","yBegin","mortal","transp","fLimit","pcmSize","pcm","rData","rsfxCount","aVolume","name","bytesToStr","bytesTerminate","size","_m_size","_m_skyTextureSize"],"mappings":"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","file":"static/js/main.c8bf1e83.chunk.js","sourcesContent":["import KaitaiStream from 'kaitai-struct/KaitaiStream';\nimport {\n    BufferGeometry,\n    DataTexture,\n    Float32BufferAttribute,\n    Group,\n    InstancedMesh,\n    Matrix4,\n    Mesh,\n    MeshLambertMaterial,\n    PlaneBufferGeometry,\n    RGBAFormat,\n    RGBFormat,\n    SphereBufferGeometry,\n    Texture,\n    UnsignedByteType\n} from 'three';\n\nimport MAP from '../kaitai/carnivores1_map';\nimport RSC from '../kaitai/carnivores1_rsc';\n\nconst areaPath = 'HUNTDAT/AREAS';\n\nconst mapScale = 256; // size of one map square\nconst mapHScale = 32; // Y scale for heightfield\nconst terrainTexSize = 128; // terrain textures are 128x128 pix\n\nfunction createMapGeometry(map: any) {\n    // Create a plane with divisions as base for map heightfield\n    const geo = new PlaneBufferGeometry(\n        map.mapSize * mapScale, map.mapSize * mapScale,\n        map.mapSize - 1, map.mapSize - 1\n    );\n\n    // Lay it flat\n    geo.rotateX(-Math.PI / 2);\n\n    // Set heights based on heightfield\n    for (let i = 0; i < map.mapSize * map.mapSize; i++) {\n        geo.attributes.position.setY(i, map.heightMap[i] * mapHScale);\n    }\n\n    // Compute normals for lighting\n    geo.computeVertexNormals();\n\n    // Return a non-indexed version of the geometry, since we're going to need\n    // to generate the UVs for the texture atlas mapping\n    return geo.toNonIndexed();\n}\n\n// Create a texture atlas for all terrain textures\n// this makes it possible to simply use UV assignments per \"square\"\n// in the terrain to render the correct textures\n// (and since it is all in one texture it helps prevent re-binding of textures)\nfunction createTextureAtlas(rsc: any) {\n    // Calculate W/H of atlas (we make a square texture atlas)\n    const textureDim = Math.ceil(Math.sqrt(rsc.textureCount));\n    const textureStride = textureDim * terrainTexSize * 3; // bytes used per single pixel row\n\n    // Allocate storage for texture atlas\n    const data = new Uint8Array(textureDim * textureStride * terrainTexSize)\n\n    // Now go over all textures...\n    for (let i = 0; i < rsc.textureCount; i++) {\n        // Determine where in the atlas grid this texture should go\n        let top = Math.floor(i / textureDim)\n        let left = Math.floor(i % textureDim)\n        // ... and the actual byte offset in our data\n        let offset = (top * textureStride * terrainTexSize) + (left * terrainTexSize * 3);\n        // Now go over the texture and decode the 16 bit texture into our 24 bit one\n        for (let y = 0; y < terrainTexSize; y++) {\n            for (let x = 0; x < terrainTexSize; x++) {\n                let pixel = rsc.textures[i].data[y * terrainTexSize + x]\n                data[offset++] = ((pixel >> 10) & 0x1f) << 3;\n                data[offset++] = ((pixel >> 5) & 0x1f) << 3;\n                data[offset++] = ((pixel >> 0) & 0x1f) << 3;\n            }\n            offset -= terrainTexSize * 3;\n            offset += textureStride;\n        }\n    }\n    // Done! Now simply create a ThreeJS texture from the data\n    const texSize = textureDim * terrainTexSize;\n    console.log(rsc, texSize, textureDim, data.byteLength)\n    const tex = new DataTexture(data, texSize, texSize, RGBFormat, UnsignedByteType);\n    tex.needsUpdate = true;\n\n    return tex;\n}\n\n// Set up the UVs for our texture atlas based on the texture map\nfunction setupTerrainUV(geometry: BufferGeometry, atlasTexture: Texture, map: any) {\n    // Get number of textures per row in our atlas\n    const textureDim = atlasTexture.image.width / terrainTexSize;\n    // size of one texture in our map in UV coordinates (they are 0...1)\n    const uvStep = 1 / textureDim;\n    const uv = geometry.attributes.uv;\n    let uvidx = 0;\n    // Loop through the entire map\n    for (let y = 0; y < map.mapSize - 1; y++) {\n        for (let x = 0; x < map.mapSize - 1; x++) {\n            // Get the texture number\n            const tidx = map.textureMap1[map.mapSize * y + x];\n            // get the rotation of the texture\n            const rot = map.fMap[map.mapSize * y + x] & 3;\n            // calculate position of texture from atlas in UV coords\n            const ty = Math.floor(tidx / textureDim) * uvStep;\n            const tx = Math.floor(tidx % textureDim) * uvStep;\n            // Okay, the code here gets a little messy, and could be optimised,\n            // but at least it reads nicer then the Carnivores code itself :P\n\n            // Four positions in uvmap to use\n            const coords = [\n                [tx, ty],\n                [tx, ty + uvStep],\n                [tx + uvStep, ty], // first triangle UV\n                [tx + uvStep, ty + uvStep],\n            ];\n            // map coordinates to all 6 vertices used for this grid square\n            let a = 0, b = 1, c = 2, d = 1, e = 3, f = 2;\n            // ... and take rotation into account\n            switch (rot) {\n                case 0: break; // default no rotation\n                case 1: // 90deg\n                    a = 1; b = d = 3; c = f = 0; e = 2;\n                    break;\n                case 2: // 180deg\n                    a = 3; b = d = 2; c = f = 1; e = 0;\n                    break;\n                case 3: // 270deg\n                    a = 2; b = d = 0; c = f = 3; e = 1;\n                    break;\n            }\n            // Okay, now simply set the UV for those 6 vertices\n            uv.setX(uvidx + 0, coords[a][0]);\n            uv.setY(uvidx + 0, coords[a][1]);\n            uv.setX(uvidx + 1, coords[b][0]);\n            uv.setY(uvidx + 1, coords[b][1]);\n            uv.setX(uvidx + 2, coords[c][0]);\n            uv.setY(uvidx + 2, coords[c][1]);\n\n            uv.setX(uvidx + 3, coords[d][0]);\n            uv.setY(uvidx + 3, coords[d][1]);\n            uv.setX(uvidx + 4, coords[e][0]);\n            uv.setY(uvidx + 4, coords[e][1]);\n            uv.setX(uvidx + 5, coords[f][0]);\n            uv.setY(uvidx + 5, coords[f][1]);\n\n            // .. and move on\n            uvidx += 6;\n        }\n    }\n    // Tell ThreeJS we modified the UVs...\n    uv.needsUpdate = true;\n}\n\nfunction createGeometry(vertices: any[], faces: any[]) {\n    let geo = new BufferGeometry();\n    let position: number[] = [];\n    let uv: number[] = [];\n    let index: number[] = [];\n    vertices.forEach(v => {\n        position.push(v.x, v.y, v.z);\n    });\n    function findUvForVertex(vIdx: number, u: number, v: number) {\n        // TODO: look for duplicate UVs and reuse\n        uv[vIdx * 2 + 0] = u;\n        uv[vIdx * 2 + 1] = v;\n        return vIdx;\n    }\n    let idx;\n    faces.forEach(f => {\n        let a = f.v1, b = f.v2, c = f.v3;\n\n        idx = findUvForVertex(a, f.tax / 256, f.tay / 256);\n        index.push(idx);\n        idx = findUvForVertex(b, f.tbx / 256, f.tby / 256);\n        index.push(idx);\n        idx = findUvForVertex(c, f.tcx / 256, f.tcy / 256);\n        index.push(idx);\n    });\n\n    geo.setAttribute('position', new Float32BufferAttribute(position, 3));\n    geo.setAttribute('uv', new Float32BufferAttribute(uv, 2));\n    geo.setIndex(index);\n    geo.computeVertexNormals();\n\n    return geo;\n}\n\nfunction createTexture(texData: Uint16Array, texSize: number) {\n    let width = 256;\n    let height = texSize / (width * 2);\n  \n    let data = new Uint8Array(width * height * 4);\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        let pixel = texData[y * width + x];\n        let offset = (y * width + x) * 4;\n        data[offset++] = ((pixel >> 10) & 0x1f) << 3;\n        data[offset++] = ((pixel >>  5) & 0x1f) << 3;\n        data[offset++] = ((pixel >>  0) & 0x1f) << 3;\n        data[offset++] = pixel ? 0xff : 0;\n      }\n    }\n  \n    const tex = new DataTexture(data, width, height, RGBAFormat, UnsignedByteType);\n    tex.needsUpdate = true;\n    return tex;\n  }\n\nfunction createInstancedModels(rsc: any, map: any, parent: Group) {\n\n    const matrices: number[][] = [];\n\n    const mapSize = map.mapSize;\n    const halfMapSize = mapSize / 2;\n\n    function getHeight(x: number, y: number) {\n        return map.heightMap[y * map.mapSize + x] * mapHScale;\n    }\n\n    const matrix = new Matrix4();\n    for (let y = 0; y < mapSize; y++) {\n        for (let x = 0; x < mapSize; x++) {\n            const obj = map.oMap[y * mapSize + x];\n            if (obj < 254) {\n                matrix.makeTranslation(\n                    (x - halfMapSize) * mapScale,\n                    getHeight(x, y),\n                    (y - halfMapSize) * mapScale)\n                if (!matrices[obj]) {\n                    matrices[obj] = matrix.toArray();\n                } else {\n                    matrices[obj].push.apply(matrices[obj], matrix.toArray())\n                }\n            } else if (obj === 254) {\n                // Landing list\n                const indicator = new Mesh(\n                    new SphereBufferGeometry(128),\n                    new MeshLambertMaterial({ color: 0xff0000 }),\n                )\n                indicator.position.set(\n                    (x - halfMapSize) * mapScale,\n                    getHeight(x, y),\n                    (y - halfMapSize) * mapScale);\n\n                parent.add(indicator);\n            } else if (obj === 255) {\n                // empty\n            }\n        }\n    }\n\n    rsc.models.forEach((mdl: any, obj: number) => {\n        if (matrices[obj]) {\n            const count = matrices[obj].length / 16;\n            const geo = createGeometry(mdl.vertices, mdl.faces);\n            const tex = createTexture(mdl.textureData, mdl.textureSize);\n            const mesh = new InstancedMesh(\n                geo, new MeshLambertMaterial({ map: tex, transparent: true, alphaTest: 0.5 }),\n                count,\n            );\n            for (let i = 0; i < count; i++) {\n                matrix.fromArray(matrices[obj], i * 16)\n                mesh.setMatrixAt(i, matrix)\n            }\n            parent.add(mesh)\n        }\n    })\n}\n\nexport async function loadArea(area: string) {\n    let scene = new Group();\n\n    try {\n        const mapBuffer = await fetch(`${areaPath}/${area}.MAP`).then(body => body.arrayBuffer());\n        const rscBuffer = await fetch(`${areaPath}/${area}.RSC`).then(body => body.arrayBuffer());\n\n        const map = new MAP(new KaitaiStream(mapBuffer));\n        const rsc = new RSC(new KaitaiStream(rscBuffer));\n\n        const geo = createMapGeometry(map)\n        const atlasTexture = createTextureAtlas(rsc);\n        setupTerrainUV(geo, atlasTexture, map);\n\n        createInstancedModels(rsc, map, scene);\n\n        // Okay, terrain done!\n        scene.add(new Mesh(\n            geo,\n            new MeshLambertMaterial({ map: atlasTexture }),\n        ));\n    } catch (e) {\n        console.error(e)\n        return undefined;\n    }\n\n    return scene;\n}\n","import React from 'react'\n\nimport { OrbitControls } from '@react-three/drei'\nimport { Canvas, useThree } from '@react-three/fiber'\n\nimport { loadArea } from '../legacy/hunt'\n\nfunction Terrain() {\n    const { scene } = useThree();\n\n    React.useEffect(() => {\n        console.time(\"loadArea\");\n        loadArea(\"AREA1\").then(world => {\n            console.timeEnd(\"loadArea\");\n            if (world) {\n                scene.add(world)\n            }\n        })\n    })\n    return null;\n}\n\nexport default function Home() {\n    return (\n        <Canvas\n            shadows\n            linear\n            camera={{\n                position: [ 0, 12000, 12000 ],\n                fov: 30,\n                near: 1,\n                far: 1000000,\n            }}\n        >\n            <directionalLight\n                args={[0xdfebff, 1]}\n                position={[50, 200, 100]}\n                shadow-mapSize-width={1024}\n                shadow-mapSize-height={1024}\n                shadow-camera-left={-300}\n                shadow-camera-right={300}\n                shadow-camera-top={300}\n                shadow-camera-bottom={-300}\n                shadow-camera-far={1000}\n                castShadow\n            />\n            <ambientLight\n                args={[0x666666]}\n            />\n\n            <OrbitControls\n                maxPolarAngle={0.4*Math.PI}\n            />\n\n            <Terrain />\n        </Canvas>\n    )\n}","import React from 'react'\n\nexport default function MapEditor() {\n    return (\n        <div />\n    )\n}","import React from 'react'\n\nexport default function ModelEditor() {\n    return (\n        <div />\n    )\n}","import React from 'react'\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport MapEditor from './pages/MapEditor';\nimport ModelEditor from './pages/ModelEditor';\n\nexport default function App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/edit-map\">\n          <MapEditor />\n        </Route>\n        <Route path=\"/edit-model\">\n          <ModelEditor />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// This is a generated file! Please edit source .ksy file and use kaitai-struct-compiler to rebuild\n/* eslint-disable */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['kaitai-struct/KaitaiStream'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory(require('kaitai-struct/KaitaiStream'));\n  } else {\n    root.Carnivores1Map = factory(root.KaitaiStream);\n  }\n}(this, function (KaitaiStream) {\nvar Carnivores1Map = (function() {\n  function Carnivores1Map(_io, _parent, _root) {\n    this._io = _io;\n    this._parent = _parent;\n    this._root = _root || this;\n\n    this._read();\n  }\n  Carnivores1Map.prototype._read = function() {\n    this.heightMap = this._io.readBytes((this.mapSize * this.mapSize));\n    this.textureMap1 = this._io.readBytes((this.mapSize * this.mapSize));\n    this.textureMap2 = this._io.readBytes((this.mapSize * this.mapSize));\n    this.oMap = this._io.readBytes((this.mapSize * this.mapSize));\n    this.fMap = this._io.readBytes((this.mapSize * this.mapSize));\n    this.lightMap = this._io.readBytes((this.mapSize * this.mapSize));\n    this.waterMap = this._io.readBytes((this.mapSize * this.mapSize));\n    this.heightMap0 = this._io.readBytes((this.mapSize * this.mapSize));\n    this.fogsMap = this._io.readBytes(Math.floor((this.mapSize * this.mapSize) / 4));\n    this.ambientMap = this._io.readBytes(Math.floor((this.mapSize * this.mapSize) / 4));\n  }\n  Object.defineProperty(Carnivores1Map.prototype, 'mapSize', {\n    get: function() {\n      if (this._m_mapSize !== undefined)\n        return this._m_mapSize;\n      this._m_mapSize = 512;\n      return this._m_mapSize;\n    }\n  });\n\n  return Carnivores1Map;\n})();\nreturn Carnivores1Map;\n}));\n","// This is a generated file! Please edit source .ksy file and use kaitai-struct-compiler to rebuild\n/* eslint-disable */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['kaitai-struct/KaitaiStream'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory(require('kaitai-struct/KaitaiStream'));\n  } else {\n    root.CarnivoresRsc = factory(root.KaitaiStream);\n  }\n}(this, function (KaitaiStream) {\nvar CarnivoresRsc = (function() {\n  function CarnivoresRsc(_io, _parent, _root) {\n    this._io = _io;\n    this._parent = _parent;\n    this._root = _root || this;\n\n    this._read();\n  }\n  CarnivoresRsc.prototype._read = function() {\n    this.textureCount = this._io.readU4le();\n    this.modelCount = this._io.readU4le();\n    this.skyRgb = new Rgb(this._io, this, this._root);\n    this.skyTRgb = new Rgb(this._io, this, this._root);\n    this.textures = new Array(this.textureCount);\n    for (var i = 0; i < this.textureCount; i++) {\n      this.textures[i] = new Texture(this._io, this, this._root);\n    }\n    this.models = new Array(this.modelCount);\n    for (var i = 0; i < this.modelCount; i++) {\n      this.models[i] = new Model(this._io, this, this._root);\n    }\n    this.skyTexture = new Array(Math.floor(this.skyTextureSize / 2));\n    for (var i = 0; i < Math.floor(this.skyTextureSize / 2); i++) {\n      this.skyTexture[i] = this._io.readU2le();\n    }\n    this.skyMap = this._io.readBytes((128 * 128));\n    this.fogCount = this._io.readU4le();\n    this.fogList = new Array(this.fogCount);\n    for (var i = 0; i < this.fogCount; i++) {\n      this.fogList[i] = new FogEntry(this._io, this, this._root);\n    }\n    this.randomSoundCount = this._io.readU4le();\n    this.randomSounds = new Array(this.randomSoundCount);\n    for (var i = 0; i < this.randomSoundCount; i++) {\n      this.randomSounds[i] = new RandomSound(this._io, this, this._root);\n    }\n    this.ambientSoundCount = this._io.readU4le();\n    this.ambientSounds = new Array(this.ambientSoundCount);\n    for (var i = 0; i < this.ambientSoundCount; i++) {\n      this.ambientSounds[i] = new AmbientSound(this._io, this, this._root);\n    }\n  }\n\n  var Rgb = CarnivoresRsc.Rgb = (function() {\n    function Rgb(_io, _parent, _root) {\n      this._io = _io;\n      this._parent = _parent;\n      this._root = _root || this;\n\n      this._read();\n    }\n    Rgb.prototype._read = function() {\n      this.r = this._io.readU4le();\n      this.g = this._io.readU4le();\n      this.b = this._io.readU4le();\n    }\n\n    return Rgb;\n  })();\n\n  var Vertex = CarnivoresRsc.Vertex = (function() {\n    function Vertex(_io, _parent, _root) {\n      this._io = _io;\n      this._parent = _parent;\n      this._root = _root || this;\n\n      this._read();\n    }\n    Vertex.prototype._read = function() {\n      this.x = this._io.readF4le();\n      this.y = this._io.readF4le();\n      this.z = this._io.readF4le();\n      this.owner = this._io.readS2le();\n      this.hide = this._io.readU2le();\n    }\n\n    return Vertex;\n  })();\n\n  var Model = CarnivoresRsc.Model = (function() {\n    function Model(_io, _parent, _root) {\n      this._io = _io;\n      this._parent = _parent;\n      this._root = _root || this;\n\n      this._read();\n    }\n    Model.prototype._read = function() {\n      this.modelInfo = new ModelInfo(this._io, this, this._root);\n      this.vertCount = this._io.readU4le();\n      this.faceCount = this._io.readU4le();\n      this.nodeCount = this._io.readU4le();\n      this.textureSize = this._io.readU4le();\n      this.faces = new Array(this.faceCount);\n      for (var i = 0; i < this.faceCount; i++) {\n        this.faces[i] = new Face(this._io, this, this._root);\n      }\n      this.vertices = new Array(this.vertCount);\n      for (var i = 0; i < this.vertCount; i++) {\n        this.vertices[i] = new Vertex(this._io, this, this._root);\n      }\n      this.nodes = new Array(this.nodeCount);\n      for (var i = 0; i < this.nodeCount; i++) {\n        this.nodes[i] = new Node(this._io, this, this._root);\n      }\n      this.textureData = new Array(Math.floor(this.textureSize / 2));\n      for (var i = 0; i < Math.floor(this.textureSize / 2); i++) {\n        this.textureData[i] = this._io.readU2le();\n      }\n      if (this.modelInfo.isAnimated) {\n        this.animation = new ModelAnimation(this._io, this, this._root);\n      }\n    }\n\n    return Model;\n  })();\n\n  var Trd = CarnivoresRsc.Trd = (function() {\n    function Trd(_io, _parent, _root) {\n      this._io = _io;\n      this._parent = _parent;\n      this._root = _root || this;\n\n      this._read();\n    }\n    Trd.prototype._read = function() {\n      this.rNumber = this._io.readU4le();\n      this.rVolume = this._io.readU4le();\n      this.rFrequency = this._io.readU4le();\n      this.rEnvironment = this._io.readU4le();\n    }\n\n    return Trd;\n  })();\n\n  var ModelInfo = CarnivoresRsc.ModelInfo = (function() {\n    function ModelInfo(_io, _parent, _root) {\n      this._io = _io;\n      this._parent = _parent;\n      this._root = _root || this;\n\n      this._read();\n    }\n    ModelInfo.prototype._read = function() {\n      this.radius = this._io.readS4le();\n      this.yLo = this._io.readS4le();\n      this.yHi = this._io.readS4le();\n      this.lineLength = this._io.readS4le();\n      this.lIntensity = this._io.readS4le();\n      this.circleRad = this._io.readS4le();\n      this.cIntensity = this._io.readS4le();\n      this.flags = this._io.readU4le();\n      this.grRad = this._io.readS4le();\n      this.refLight = this._io.readS4le();\n      this.lastAniTime = this._io.readU4le();\n      this.boundR = this._io.readF4le();\n      this.reserved = this._io.readBytes(16);\n    }\n    Object.defineProperty(ModelInfo.prototype, 'isAnimated', {\n      get: function() {\n        if (this._m_isAnimated !== undefined)\n          return this._m_isAnimated;\n        this._m_isAnimated = (this.flags & 2147483648) != 0;\n        return this._m_isAnimated;\n      }\n    });\n    Object.defineProperty(ModelInfo.prototype, 'notLighted', {\n      get: function() {\n        if (this._m_notLighted !== undefined)\n          return this._m_notLighted;\n        this._m_notLighted = (this.flags & 64) != 0;\n        return this._m_notLighted;\n      }\n    });\n    Object.defineProperty(ModelInfo.prototype, 'needsBound', {\n      get: function() {\n        if (this._m_needsBound !== undefined)\n          return this._m_needsBound;\n        this._m_needsBound = (this.flags & 16) != 0;\n        return this._m_needsBound;\n      }\n    });\n\n    return ModelInfo;\n  })();\n\n  var ModelAnimation = CarnivoresRsc.ModelAnimation = (function() {\n    function ModelAnimation(_io, _parent, _root) {\n      this._io = _io;\n      this._parent = _parent;\n      this._root = _root || this;\n\n      this._read();\n    }\n    ModelAnimation.prototype._read = function() {\n      this.vc0 = this._io.readU4le();\n      this.vc1 = this._io.readU4le();\n      this.vc2 = this._io.readU4le();\n      this.kps = this._io.readU4le();\n      this.frameCount = this._io.readU4le();\n      this.frames = new Array(((this.frameCount * 3) * this.vc1));\n      for (var i = 0; i < ((this.frameCount * 3) * this.vc1); i++) {\n        this.frames[i] = this._io.readS2le();\n      }\n    }\n\n    return ModelAnimation;\n  })();\n\n  var Face = CarnivoresRsc.Face = (function() {\n    function Face(_io, _parent, _root) {\n      this._io = _io;\n      this._parent = _parent;\n      this._root = _root || this;\n\n      this._read();\n    }\n    Face.prototype._read = function() {\n      this.v1 = this._io.readU4le();\n      this.v2 = this._io.readU4le();\n      this.v3 = this._io.readU4le();\n      this.tax = this._io.readS4le();\n      this.tbx = this._io.readS4le();\n      this.tcx = this._io.readS4le();\n      this.tay = this._io.readS4le();\n      this.tby = this._io.readS4le();\n      this.tcy = this._io.readS4le();\n      this.flags = this._io.readU2le();\n      this.dMask = this._io.readU2le();\n      this.distant = this._io.readS4le();\n      this.next = this._io.readU4le();\n      this.group = this._io.readU4le();\n      this.reserved = this._io.readBytes(12);\n    }\n\n    return Face;\n  })();\n\n  var FogEntry = CarnivoresRsc.FogEntry = (function() {\n    function FogEntry(_io, _parent, _root) {\n      this._io = _io;\n      this._parent = _parent;\n      this._root = _root || this;\n\n      this._read();\n    }\n    FogEntry.prototype._read = function() {\n      this.fogRgb = this._io.readU4le();\n      this.yBegin = this._io.readF4le();\n      this.mortal = this._io.readU4le();\n      this.transp = this._io.readF4le();\n      this.fLimit = this._io.readF4le();\n    }\n\n    return FogEntry;\n  })();\n\n  var AmbientSound = CarnivoresRsc.AmbientSound = (function() {\n    function AmbientSound(_io, _parent, _root) {\n      this._io = _io;\n      this._parent = _parent;\n      this._root = _root || this;\n\n      this._read();\n    }\n    AmbientSound.prototype._read = function() {\n      this.pcmSize = this._io.readU4le();\n      this.pcm = this._io.readBytes(this.pcmSize);\n      this.rData = new Array(16);\n      for (var i = 0; i < 16; i++) {\n        this.rData[i] = new Trd(this._io, this, this._root);\n      }\n      this.rsfxCount = this._io.readU4le();\n      this.aVolume = this._io.readU4le();\n    }\n\n    return AmbientSound;\n  })();\n\n  var Node = CarnivoresRsc.Node = (function() {\n    function Node(_io, _parent, _root) {\n      this._io = _io;\n      this._parent = _parent;\n      this._root = _root || this;\n\n      this._read();\n    }\n    Node.prototype._read = function() {\n      this.name = KaitaiStream.bytesToStr(KaitaiStream.bytesTerminate(this._io.readBytes(32), 0, false), \"utf8\");\n      this.x = this._io.readF4le();\n      this.y = this._io.readF4le();\n      this.z = this._io.readF4le();\n      this.owner = this._io.readS2le();\n      this.hide = this._io.readU2le();\n    }\n\n    return Node;\n  })();\n\n  var RandomSound = CarnivoresRsc.RandomSound = (function() {\n    function RandomSound(_io, _parent, _root) {\n      this._io = _io;\n      this._parent = _parent;\n      this._root = _root || this;\n\n      this._read();\n    }\n    RandomSound.prototype._read = function() {\n      this.pcmSize = this._io.readU4le();\n      this.pcm = this._io.readBytes(this.pcmSize);\n    }\n\n    return RandomSound;\n  })();\n\n  var Texture = CarnivoresRsc.Texture = (function() {\n    function Texture(_io, _parent, _root) {\n      this._io = _io;\n      this._parent = _parent;\n      this._root = _root || this;\n\n      this._read();\n    }\n    Texture.prototype._read = function() {\n      this.data = new Array(Math.floor(this.size / 2));\n      for (var i = 0; i < Math.floor(this.size / 2); i++) {\n        this.data[i] = this._io.readU2le();\n      }\n    }\n    Object.defineProperty(Texture.prototype, 'size', {\n      get: function() {\n        if (this._m_size !== undefined)\n          return this._m_size;\n        this._m_size = ((128 * 128) * 2);\n        return this._m_size;\n      }\n    });\n\n    return Texture;\n  })();\n  Object.defineProperty(CarnivoresRsc.prototype, 'skyTextureSize', {\n    get: function() {\n      if (this._m_skyTextureSize !== undefined)\n        return this._m_skyTextureSize;\n      this._m_skyTextureSize = ((256 * 256) * 2);\n      return this._m_skyTextureSize;\n    }\n  });\n\n  return CarnivoresRsc;\n})();\nreturn CarnivoresRsc;\n}));\n"],"sourceRoot":""}